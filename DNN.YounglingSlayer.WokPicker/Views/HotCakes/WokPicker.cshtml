@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<IEnumerable<DNN.WokPickerDNN.YounglingSlayer.WokPicker.Models.Section>>

@using System.Text.RegularExpressions
@using DotNetNuke.Web.Mvc.Helpers
@using System.Linq
@using Dnn.Modules.Console

@{ 
    var cardNum = 0;
    var categoryNum = 0;
}


<div id="Items-@Dnn.ModuleContext.ModuleId" class="WokPicker_MainDiv">

    <fieldset>
        @if (Model.Count() > 0)
        {
            foreach (var category in Model)
            {
                cardNum = 0;
                <div class="WokPicker_section">
                    @if (!(@category.Name == "nincs"))
                    {
                        <h2 class="WokPicker_section_title">@category.Name</h2>
                    }
                    @if (!(category.Description == "nincs"))
                    {
                        <p class="WokPicker_section_desc">@category.Description</p>
                    }

                <div id="@("Section" + category.Id)" class="WokPicker_card_container  @(category.MultiSelect ? "MultiSelect" : "SingleSelect")">
                    @Html.Hidden("Sections[" + category.Id + "].MultiSelect", Model.ElementAt(categoryNum).MultiSelect)
                    @Html.Hidden("Sections[" + category.Id + "].PropertyName", Model.ElementAt(categoryNum).PropertyName)
                    @foreach (var item in category.Cards)
                    {
                        cardNum = cardNum + 1;
                        if (item.ItemMissing == true)
                        {
                            <div class="WokPicker_card">
                                <div class="WokPicker_Img">
                                </div>
                                <p class="WokPicker_card_title">
                                    Hiányzik
                                </p>

                            </div>
                        }
                        else
                        {
                            var cardIndex = "Sections[" + categoryNum + "].Cards[" + (cardNum - 1) + "]";
                            var bvinName = cardIndex + ".Bvin";
                            var selectedName = cardIndex + ".Selected";
                            var cardName = cardIndex + ".TranslatedName";
                            var priceName = cardIndex + ".Item.SitePrice";
                            var spicyName = cardIndex + ".Spicy";
                            var imagefileName = cardIndex + ".Item.ImageFileSmall";



                            <div id="@("WokPicker_Card_"  + (category.Id * 100 + cardNum).ToString())" class="WokPicker_card @(item.Disable ? "disabled" : "")">
                                <div class="WokPicker_Img">
                                    <img class="main" src=@item.Item.ImageFileSmall alt="teszt">
                                    <img class="spicy" @(item.Spicy ? "" : "hidden") src="Content/spicy.png" alt="Alternate Text" />
                                </div>
                                <p class="WokPicker_card_title">
                                    @if (item.NameOverride)
                                    {
                                        @item.NameOverrideText
                                        @Html.Hidden(cardName, Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).NameOverrideText)
                                    }
                                    else
                                    {
                                        @item.TranslatedName
                                        @Html.Hidden(cardName, Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).TranslatedName)
                                    }
                                </p>
                                @Html.Hidden(bvinName, Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).Bvin)
                                @Html.Hidden(priceName, Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).Item.SitePrice)
                                @Html.Hidden(selectedName, Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).Selected, new { @class = "hiddenSelectorModel" })
                                @Html.Hidden(spicyName, Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).Spicy)
                                @Html.Hidden(imagefileName, Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).Item.ImageFileSmall)

                            </div>
                        }


                    }
                </div>
                </div>
                categoryNum = categoryNum + 1;
            }
        }
        else
        {
            <p>No cucc sry</p>
        }

    </fieldset>
    <button class="dnnPrimaryAction" id="submit"> Rendelés leadása</button>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const singleSelects = document.querySelectorAll(".SingleSelect");
        const multiSelects = document.querySelectorAll(".MultiSelect");

        singleSelects.forEach(container => {
            container.addEventListener("click", function (event) {

                const clickedCard = event.target.closest(".WokPicker_card");
                if (!clickedCard) return;
                if (clickedCard.classList.contains("disabled")) return;


                const wokPickerCards = container.querySelectorAll(".WokPicker_card");
                wokPickerCards.forEach(card => card.classList.remove("selected"));
                wokPickerCards.forEach(card => {
                    card.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                        input.value = "false";
                    });
                });

                clickedCard.classList.add("selected");
                clickedCard.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                    input.value = "true";
                });
                
            });
        });


        multiSelects.forEach(container => {
            container.addEventListener("click", function (event) {
                const clickedCard = event.target.closest(".WokPicker_card");
                if (!clickedCard) return;
                if (clickedCard.classList.contains("disabled")) return;

                clickedCard.classList.toggle("selected");
                if (clickedCard.classList.contains("selected"))
                {
                    clickedCard.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                        input.value = "true";
                    });
                }
                else
                {
                    clickedCard.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                        input.value = "false";
                    });
                }
            });
        });
    });


</script>