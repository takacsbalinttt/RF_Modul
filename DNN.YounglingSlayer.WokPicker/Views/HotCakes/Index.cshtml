@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<IEnumerable<DNN.WokPickerDNN.YounglingSlayer.WokPicker.Models.Section>>

@using System.Text.RegularExpressions
@using DotNetNuke.Web.Mvc.Helpers
@using System.Linq
@using Dnn.Modules.Console

@{ 
    var cardNum = 0;
    var categoryNum = 0;
}


<div id="Items-@Dnn.ModuleContext.ModuleId">

        @if(Model.Count() > 0)
        {
            foreach (var category in Model)
            {
                cardNum = 0;
                <div class="WokPicker_section">
                    @if (!(@category.Name == "nincs"))
                    {
                        <h2>@category.Name</h2>
                    }
                    @if (!(category.Description == "nincs"))
                    {
                        <p class="WokPicker_section_desc">@category.Description</p>
                    }

                <div id="@("Section" + category.Id)" class="WokPicker_card_container  @(category.MultiSelect ? "MultiSelect" : "SingleSelect")">
                    @foreach (var item in category.Cards)
                    {
                        cardNum = cardNum + 1;
                        if (item.ItemMissing == true)
                        {
                            <div class="WokPicker_card">
                                <div class="WokPicker_Img">
                                </div>
                                <p class="WokPicker_card_title">
                                    Hiányzik
                                </p>

                            </div>
                        }
                        else
                        {
                            <div id="@("WokPicker_Card_"  + (category.Id * 100 + cardNum).ToString())"      class="WokPicker_card @(item.Disable ? "disabled" : "")">
                                <div class="WokPicker_Img" @*style="background: url("@item.Item.ImageFileSmall")"*@>
                                    <img src=@item.Item.ImageFileSmall alt="teszt">
                                </div>  
                                <p class="WokPicker_card_title">
                                    @if (item.NameOverride)
                                    {
                                        @item.NameOverrideText
                                    }
                                    else
                                    {
                                        @item.TranslatedName
                                    }
                                </p>
                                @{
                                }

                                @Html.HiddenFor(modelItem => Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).Bvin);
                                @Html.HiddenFor(modelItem => Model.ElementAt(categoryNum).Cards.ElementAt(cardNum - 1).Selected, new {@class = "hiddenSelectorModel"});

                            </div>
                        }


                    }
                </div>
            </div>
                categoryNum = categoryNum + 1;
            }
        }
        else
        {
            <p>No cucc sry</p>
        }
   <button type="submit" class="dnnPrimaryAction">Beküldés</button>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const singleSelects = document.querySelectorAll(".SingleSelect");
        const multiSelects = document.querySelectorAll(".MultiSelect");

        singleSelects.forEach(container => {
            container.addEventListener("click", function (event) {

                if (!event.target.classList.contains("WokPicker_card")) return;


                const wokPickerCards = container.querySelectorAll(".WokPicker_card");
                wokPickerCards.forEach(card => card.classList.remove("selected"));
                wokPickerCards.forEach(card => {
                    card.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                        input.value = "false";
                    });
                });

                event.target.classList.add("selected");
                event.target.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                    input.value = "true";
                });
                
            });
        });


        multiSelects.forEach(container => {
            container.addEventListener("click", function (event) {
                if (!event.target.classList.contains("WokPicker_card")) return;


                event.target.classList.toggle("selected");
                if(event.target.classList.contains("selected"))
                {
                    event.target.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                        input.value = "true";
                    });
                }
                else
                {
                    event.target.querySelectorAll("input[class=hiddenSelectorModel]").forEach(input => {
                        input.value = "false";
                    });
                }
            });
        });
    });


</script>